interface BlobCommandOptions {
    token?: string;
}
declare class BlobError extends Error {
    constructor(message: string);
}
declare class BlobAccessError extends Error {
    constructor();
}
declare class BlobUnknownError extends Error {
    constructor();
}

interface PutCommandOptions extends BlobCommandOptions {
    access: 'public';
    contentType?: string;
    addRandomSuffix?: boolean;
    cacheControlMaxAge?: number;
}
interface PutBlobResult {
    url: string;
    pathname: string;
    contentType: string;
    contentDisposition: string;
}

export { BlobCommandOptions as B, PutCommandOptions as P, PutBlobResult as a, BlobAccessError as b, BlobError as c, BlobUnknownError as d };
